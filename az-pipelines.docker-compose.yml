# This pipeline builds two docker images (the golang api and swaggerUI from dockerhub )
# It pushes it to Azure ACR
# Its used in one of the pipelines in Azure DevOps 

pool:
    vmImage: 'ubuntu-latest'

variables:
- group: DeploymentVars # that group exists in Azure DevOps, contains eg AZDEVOPS_COMPOSE_BUILDTYPE variable
      
steps:
- task: DockerCompose@0
  displayName: build Golang app to Docker Image and produce swagger.json
  inputs:
    action: Build services
    dockerComposeFileArgs: ContainerRegistry=$(AZ_CONTAINER_REGISTRY)
    azureSubscriptionEndpoint: $(AZ_SUBSCRIPTION_ENDPOINT)
    azureContainerRegistry: $(AZ_CONTAINER_REGISTRY)
    additionalDockerComposeFiles: docker-compose.azure.prod.yml
    #dockerComposeFile: docker-compose.azure.prod.yml
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    additionalImageTags: $(Build.BuildId)
    buildImages: true
    #abortOnContainerExit: true
- task: DockerCompose@0
  displayName: Push services
  inputs:
    action: Push services
    azureSubscriptionEndpoint: $(AZ_SUBSCRIPTION_ENDPOINT)
    azureContainerRegistry: $(AZ_CONTAINER_REGISTRY)
    additionalDockerComposeFiles: docker-compose.azure.prod.yml
    #dockerComposeFile: docker-compose.azure.prod.yml
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    #additionalImageTags: $(Build.BuildId)