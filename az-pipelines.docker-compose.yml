# This pipeline builds two docker images (the golang api and swaggerUI from dockerhub )
# It pushes it to Azure ACR 

# NOT USED RIGHT NOW. Regular az-pipelines.docker.yml used.

pool:
    vmImage: 'ubuntu-latest'

variables:
- group: BuildVars # that group exists in Azure DevOps, contains eg AZDEVOPS_COMPOSE_BUILDTYPE variable
      
steps:
- task: DockerCompose@0
  displayName: build Golang app to Docker Image and produce swagger.json
  inputs:
    action: Build services
    dockerComposeFileArgs: BUILD_TYPE=$(AZDEVOPS_COMPOSE_BUILDTYPE)
    azureSubscriptionEndpoint: EPAM-Visual Studio Professional-Azure Resource Manager connection.
    azureContainerRegistry: rumairstaging.azurecr.io
    #additionalDockerComposeFiles: 
    dockerComposeFile: docker-compose.azure.prod.yml
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    additionalImageTags: $(Build.BuildId)
    buildImages: true
    #abortOnContainerExit: true
- task: DockerCompose@0
  displayName: Push services
  inputs:
    action: Push services
    azureSubscriptionEndpoint: EPAM-Visual Studio Professional-Azure Resource Manager connection.
    azureContainerRegistry: rumairstaging.azurecr.io
    dockerComposeFile: docker-compose.azure.prod.yml
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    #additionalImageTags: $(Build.BuildId)